FUNCIONES ALMACENADAS KRIS


1) ASIGNACIÓN DE SUBSIDIO


   --select simple de la función funcionando-- 
 SELECT C.RUT_CLIENTE,

CASE 
WHEN P.NOMBRE_PREVISION='Fonasa' AND TP.TRAMO_PREVISION='A' THEN 1
WHEN P.NOMBRE_PREVISION='Fonasa' AND TP.TRAMO_PREVISION='B' THEN 0.7
WHEN P.NOMBRE_PREVISION='Fonasa' AND TP.TRAMO_PREVISION='C' THEN 0.5
WHEN P.NOMBRE_PREVISION='Fonasa' AND TP.TRAMO_PREVISION='D' THEN 0.2
ELSE 0
END SUBSIDIO
INTO V_RUN_CLIENTE,V_DESCUENTO_SUBSIDIO
FROM CLIENTE C
JOIN TRAMO_PREVISION TP ON TP.ID_TRAMO_PREV=C.ID_TRAMO_PREV
JOIN PREVISION P ON TP.ID_PREVISION=P.ID_PREVISION
;

--FUNCION ACTUALIZADA LISTA--

CREATE OR REPLACE FUNCTION FN_CALC_DESC_SUBSIDIO
(P_RUN_CLIENTE NUMBER)
RETURN FLOAT IS
V_RUN_CLIENTE NUMBER(10);
--V_NOMBRE_PREVISION VARCHAR2(10);
--V_TRAMO VARCHAR2(1);
V_DESCUENTO_SUBSIDIO FLOAT;
BEGIN
--CONSULTA QUE DA EL NOMBRE DE LA PREVISIÓN Y SU TRAMO CON EL DESCUENTO SUBSIDIO
SELECT T.RUT_CLIENTE,T.SUBSIDIO
INTO V_RUN_CLIENTE,V_DESCUENTO_SUBSIDIO
FROM (SELECT DISTINCT
    C.RUT_CLIENTE,
    CASE 
        WHEN P.NOMBRE_PREVISION='Fonasa' AND TP.TRAMO_PREVISION='A' THEN 1
        WHEN P.NOMBRE_PREVISION='Fonasa' AND TP.TRAMO_PREVISION='B' THEN 0.7
        WHEN P.NOMBRE_PREVISION='Fonasa' AND TP.TRAMO_PREVISION='C' THEN 0.5
        WHEN P.NOMBRE_PREVISION='Fonasa' AND TP.TRAMO_PREVISION='D' THEN 0.2
    ELSE 0
    END SUBSIDIO

FROM CLIENTE C
JOIN TRAMO_PREVISION TP ON TP.ID_TRAMO_PREV=C.ID_TRAMO_PREV
JOIN PREVISION P ON TP.ID_PREVISION=P.ID_PREVISION
WHERE C.RUT_CLIENTE=P_RUN_CLIENTE
) T ;
RETURN V_DESCUENTO_SUBSIDIO;

END FN_CALC_DESC_SUBSIDIO;

--EJECUCION--

--PROBANDO LA FUNCION (definitivo)--
SELECT DISTINCT RUT_CLIENTE,FN_CALC_DESC_SUBSIDIO (RUT_CLIENTE)  DESCUENTO_SUBSIDIO FROM CLIENTE;

--PROBANDO LA FUNCION--
SELECT RUN_CLIENTE,NOMBRE_PREVISION,TRAMO_PREVISION,FN_CALC_DESC_SUBSIDIO (RUN_CLIENTE) FROM CLIENTE;

SELECT RUN_CLIENTE RUN_CLI,NOMBRE_PREVISION NOMBRE_PREV, TRAMO_PREVISION TRAMO_PREV,FN_CALC_DESC_SUBSIDIO(16559340,'Fonasa A','A') DESCUENTO_SUBSIDIO FROM CLIENTE;


 FUNCION 2) CANTIDAD DE ATENCIONES


--SELECT SIMPLE--
SELECT TO_CHAR(F.RUT_FUNC,'999G999G999')||'-'||F.DVRUT_FUNC RUN_FUNCIONARIO,
F.NOMBRE_FUNC||' '||F.APATERNO_FUNC||' '||F.AMATERNO_FUNC NOMBRE_FUNCIONARIO,
ESP.ESP ESPECIALIDAD,
TO_CHAR( C.FECHA_CITA,'Month') MES_ATENCION,
COUNT(C.ID_CITA) CANT_CITAS,
P.NOMBRE_PREVISION NOMBRE_PREV ,
EP.RESULTADO_POSTULACION RESULTADO_POSTULACION ,
TO_CHAR(SUM(C.VALOR_CITA),'FML999G999') RECAUDACION_MENSUAL
FROM 
(SELECT DISTINCT
  E.RUT_FUNC,
  first_value (E.NOMBRE_ESP )  OVER (PARTITION BY E.RUT_FUNC ORDER BY E.NOMBRE_ESP) ESP
FROM ESPECIALIDAD E ) ESP
 JOIN FUNCIONARIO F ON F.RUT_FUNC=ESP.RUT_FUNC
 JOIN CITA C ON C.RUT_FUNC=ESP.RUT_FUNC
JOIN FICHA_CLINICA  FC ON FC.ID_FICHA_CLI=C.ID_FICHA_CLI
 JOIN CLIENTE  C ON C.ID_FICHA_CLI=FC.ID_FICHA_CLI
   JOIN TRAMO_PREVISION TP ON C.ID_TRAMO_PREV=TP.ID_TRAMO_PREV
    JOIN PREVISION P ON P.ID_PREVISION=TP.ID_PREVISION
     JOIN POSTULACION PO ON C.RUT_CLIENTE=PO.RUT_CLIENTE
      JOIN ESTADO_POSTULACION EP ON PO.ID_POSTULACION=EP.ID_POSTULACION
      GROUP BY F.RUT_FUNC, F.DVRUT_FUNC, F.NOMBRE_FUNC,F.APATERNO_FUNC,F.AMATERNO_FUNC ,ESP.ESP
 ,C.FECHA_CITA,P.NOMBRE_PREVISION,EP.RESULTADO_POSTULACION
 ORDER BY CANT_CITAS DESC
 ;

CREATE OR REPLACE FUNCTION FN_GESTION_ATENCIONES
 (P_MES VARCHAR2,P_RUN_FUNC NUMBER,P_DVRUN VARCHAR2)
RETURN VARCHAR2 IS
V_RESUMEN_ATENCIONES VARCHAR2(500);
BEGIN
   SELECT TO_CHAR(F.RUT_FUNC,'999G999G999')||'-'||F.DVRUT_FUNC ||';' ||
 F.NOMBRE_FUNC||' '||F.APATERNO_FUNC||' '||F.AMATERNO_FUNC || ';' ||
 ESP.ESP ||';' ||TO_CHAR( C.FECHA_CITA,'Month') ||';' ||
COUNT(C.ID_CITA) ||';' ||
 P.NOMBRE_PREVISION  || ';'||
EP.RESULTADO_POSTULACION  ||';'||
TO_CHAR(SUM(C.VALOR_CITA),'FML999G999') 
 INTO V_RESUMEN_ATENCIONES

 FROM 
(SELECT DISTINCT
 E.RUT_FUNC,
 --ESTA PARTICIÓN ES PARA QUEDARSE CON UNA SOLA ESPECIALIDAD DEL DENTISTA Y SACAR LA ESTADISTICA
 FIRST_VALUE (E.NOMBRE_ESP )  OVER (PARTITION BY E.RUT_FUNC ORDER BY E.NOMBRE_ESP) ESP
 FROM ESPECIALIDAD E ) ESP
 JOIN FUNCIONARIO F ON F.RUT_FUNC=ESP.RUT_FUNC
 JOIN CITA C ON C.RUT_FUNC=ESP.RUT_FUNC
 JOIN FICHA_CLINICA  FC ON FC.ID_FICHA_CLI=C.ID_FICHA_CLI
 JOIN CLIENTE  C ON C.ID_FICHA_CLI=FC.ID_FICHA_CLI
 JOIN TRAMO_PREVISION TP ON C.ID_TRAMO_PREV=TP.ID_TRAMO_PREV
 JOIN PREVISION P ON P.ID_PREVISION=TP.ID_PREVISION
 JOIN POSTULACION PO ON C.RUT_CLIENTE=PO.RUT_CLIENTE
 JOIN ESTADO_POSTULACION EP ON PO.ID_POSTULACION=EP.ID_POSTULACION
  WHERE TO_CHAR( C.FECHA_CITA,'Month')=P_MES AND F.RUT_FUNC=P_RUN_FUNC AND F.DVRUT_FUNC=P_DVRUN
 GROUP BY F.RUT_FUNC, F.DVRUT_FUNC, F.NOMBRE_FUNC,F.APATERNO_FUNC,F.AMATERNO_FUNC ,ESP.ESP
 ,C.FECHA_CITA,P.NOMBRE_PREVISION,EP.RESULTADO_POSTULACION;
  --ORDER BY CANT_CITAS DESC;
   RETURN V_RESUMEN_ATENCIONES;  
END FN_GESTION_ATENCIONES;


----------------------------------
EJECUTAR 
SELECT REGEXP_SUBSTR (GESTION_ATENCIONES,'[^;]+',1,1) RUN_ESPECIALISTA,
REGEXP_SUBSTR (GESTION_ATENCIONES,'[^;]+',1,2) ESPECIALISTA,
REGEXP_SUBSTR (GESTION_ATENCIONES,'[^;]+',1,3) ESPECIALIDAD,
REGEXP_SUBSTR (GESTION_ATENCIONES,'[^;]+',1,4) MES_ATENCION,
REGEXP_SUBSTR (GESTION_ATENCIONES,'[^;]+',1,5) NRO_CITAS,
REGEXP_SUBSTR (GESTION_ATENCIONES,'[^;]+',1,6) PREVISION,
REGEXP_SUBSTR (GESTION_ATENCIONES,'[^;]+',1,7) RESULTADO_POSTULACION,
REGEXP_SUBSTR (GESTION_ATENCIONES,'[^;]+',1,8) RECAUDACION_MENSUAL
FROM(
SELECT FN_GESTION_ATENCIONES ('Septiembre',RUT_FUNC,DVRUT_FUNC) GESTION_ATENCIONES FROM FUNCIONARIO F
WHERE FN_GESTION_ATENCIONES ('Septiembre',RUT_FUNC,DVRUT_FUNC) IS NOT NULL)
ORDER BY NRO_CITAS  DESC;
